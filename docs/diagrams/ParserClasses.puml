@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR


package "Parser classes"{
Class "<<interface>>\nParser" as Parser
Class "{abstract}\nCommand" as Command
Class "{abstract}\nXYZCommand" as XYZCommand
Class AddressBookParser
Class XYZCommandParser
Class ABCCommandParser
Class CliSyntax
Class ParserUtil
Class ArgumentMultimap
Class ArgumentTokenizer
Class Prefix
Class XYZTYPECommandParser
Class XYZTYPECommand
Class ABCCommand
enum Type
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> AddressBookParser

AddressBookParser .down.> XYZCommandParser: creates >
AddressBookParser .down.> ABCCommandParser: creates >
AddressBookParser ..> Command : returns >
XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser .up.|> Parser
XYZCommandParser ..> ArgumentMultimap
XYZCommandParser ..> ArgumentTokenizer
XYZCommandParser ..> CliSyntax
XYZCommandParser ..> XYZTYPECommandParser : creates >
XYZTYPECommandParser ..> XYZTYPECommand : creates >
XYZTYPECommandParser ..> XYZCommand : returns >
XYZTYPECommandParser .up.|> Parser
XYZTYPECommand -up-|> XYZCommand
XYZTYPECommandParser -up-|> Type
ArgumentTokenizer .left.> ArgumentMultimap
CliSyntax ..> Prefix
XYZCommandParser ..> ParserUtil
ParserUtil .down.> Prefix
ArgumentTokenizer .down.> Prefix
XYZCommand -up-|> Command
XYZCommandParser ..> XYZTYPECommandParser: creates >
ABCCommand -up|> Command
ABCCommandParser ..> ABCCommand : creates >

@enduml
